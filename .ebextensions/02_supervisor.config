packages:
    python:
        supervisor: []

files:
    "/usr/local/etc/supervisord.conf":
        mode: "000644"
        owner: root
        group: root
        content: |
            ; supervisor config file
            [unix_http_server]
            file=/var/run/supervisor.sock   ; (the path to the socket file)
            chmod=0700                       ; sockef file mode (default 0700)
            [supervisord]
            logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
            pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
            childlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)
            ; the below section must remain in the config file for RPC
            ; (supervisorctl/web interface) to work, additional interfaces may be
            ; added by defining them in separate rpcinterface: sections
            [rpcinterface:supervisor]
            supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface
            [supervisorctl]
            serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket
            ; The [include] section can just contain the "files" setting.  This
            ; setting can list multiple files (separated by whitespace or
            ; newlines).  It can also contain wildcards.  The filenames are
            ; interpreted as relative to this file.  Included files *cannot*
            ; include files themselves.
            [include]
            files = /etc/supervisor/conf.d/*.conf
            ; Change according to your configurations
        "/etc/supervisor/conf.d/rq-worker.conf":
            mode: "000755"
            owner: root
            group: root
            content: |
                [program:myworker]
                ; Point the command to the specific rq command you want to run.
                ; If you use virtualenv, be sure to point it to
                ; /path/to/virtualenv/bin/rq
                ; Also, you probably want to include a settings module to configure this
                ; worker.  For more info on that, see http://python-rq.org/docs/workers/
                command=/var/app/venv/staging-LQM1lest/lib/python3.7/site-packages/rq worker -c app/config
                ; process_num is required if you specify >1 numprocs
                process_name=%(program_name)s-%(process_num)s

                ; If you want to run more than one worker instance, increase this
                numprocs=1

                ; This is the directory from which RQ is ran. Be sure to point this to the
                ; directory where your source code is importable from
                directory=/var/app/current

                ; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
                ; within 10 seconds, supervisor will forcefully kill it
                stopsignal=TERM

                ; These are up to you
                autostart=true
                autorestart=true